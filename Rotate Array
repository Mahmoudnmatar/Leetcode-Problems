public class Solution {
    public void Rotate(int[] nums, int k) {

        int n = nums.Length ;

        int[] result = new int[n];
    
        for (int i = 0; i < nums.Length; ++i) {
            int index = (i + k % nums.Length + nums.Length) % nums.Length;

            result[index] = nums[i];
        }
        Array.Copy(result, nums, nums.Length);

    }
}


another soultion 


public class Solution {
    public void Rotate(int[] nums, int k) {

        if (k <= 0)
        return;

        int t = 0;

        for (int i = 0; i < k; i++) {
            t = nums[nums.Length - 1];
    
            for (int j = nums.Length - 1; j > 0; j--) {
                nums[j] = nums[j - 1];
            }
    
            nums[0] = t;
        }

    }
}
